%% Prototype Matlab

% Le prototype se sert d'une image en entrée pour créer une cible sur
% ordinateur, repérer le jeton joué, créer le rond correspondant et
% calculer sa distance à la cible.

% Ici on se place dans le cas ou la cible est uniquement virtuelle.

%% Test avec une image
fond1 = imread("ImagesTrepiedTest\Fond.jpeg") ;
img = imread("ImagesTrepiedTest\Trepied1_3.jpeg") ;

figure; 
imshow(img)

gray_fond = rgb2gray(fond1) ;
gray_img = rgb2gray(img) ;

sansFond = imabsdiff(img, fond1) ;
sansFond = imadjust(rgb2gray(sansFond)) ;
figure ;
imshow(sansFond) ;


[centers, radii] = imfindcircles(sansFond, [10 20], 'ObjectPolarity', 'bright', 'Sensitivity', 0.95);

figure;
imshow(img) ;
viscircles(centers, radii, 'EdgeColor', 'b');

%% Logique de jeu

% Initialisation des variables
fond1 = imread("ImagesTrepiedTest\Fond.jpeg") ;
fond2 = imread("ImagesTrepiedTest\Fond2.jpeg") ;

centresPieces = [] ;
radiiPieces = [] ;

cible = [339, 207] ;
distancesCible = [] ;

% Affichage de la cible
figure ;
imshow(fond1) ;
hold on ;
plot(cible(1), cible(2), '+r', 'MarkerSize',15) ;
hold off ;


for i = 1:6
    filename = fullfile('ImagesTrepiedTest', sprintf('Trepied1_%d.jpeg', i));
    img = imread(filename);

    [nouveauxCentres, nouveauxRadii, nouvellesDistances] = tour(img, fond1, centresPieces, radiiPieces, cible, distancesCible, 1) ;
    centresPieces = nouveauxCentres ; 
    radiiPieces = nouveauxRadii ;
    distancesCible = nouvellesDistances ;
end

%% 2e série d'image
fond2 = imread("ImagesTrepiedTest\Fond2.jpeg") ;

centresPieces = [] ;
radiiPieces = [] ;

cible = [339, 207] ;
distancesCible = [] ;

% Affichage de la cible
figure ;
imshow(fond2) ;
hold on ;
plot(cible(1), cible(2), '+r', 'MarkerSize',15) ;
hold off ;


for i = 2:7
    filename = fullfile('ImagesTrepiedTest', sprintf('Trepied2_%d.jpeg', i));
    img = imread(filename);

    [nouveauxCentres, nouveauxRadii, nouvellesDistances] = tour(img, fond2, centresPieces, radiiPieces, cible, distancesCible, 2) ;
    centresPieces = nouveauxCentres ; 
    radiiPieces = nouveauxRadii ;
    distancesCible = nouvellesDistances ;
end

%% Auto-calibrage de la pièce
clear all;
close all;

fond1 = imread("ImagesTrepiedTest\Fond.jpeg") ;

for i = 1:6
    img = imread(fullfile('ImagesTrepiedTest', sprintf('Trepied1_%d.jpeg', i)));

    sansFond = imabsdiff(img, fond1);
    sansFond = rgb2gray(sansFond);
    M = max(max(sansFond));
    sansFond = sansFond*(255/M);
    
    sansFond=imfilter(sansFond,fspecial("average",[5 5]));
    [Gmag,Gdir] = imgradient(sansFond);
    sansFond=Gmag;
    sansFond = imclearborder(sansFond);
    M = max(max(sansFond));
    sansFond = sansFond*(255/M);
    
    sansFond = sansFond>50;
    sansFond = imopen(sansFond, strel('square', 3));
    sansFond = imclose(sansFond, strel('disk', 50));
    [sansFond,Gdir] = imgradient(sansFond);

    [centers, radii] = imfindcircles(sansFond, [7 40], 'ObjectPolarity', 'bright', 'Sensitivity', 0.95);
    [radiimax, imax] = max(radii);
    radiimax
    figure;
    imshow(img) ;
    viscircles(centers(imax, :), radiimax, 'EdgeColor', 'b');
end

%% Auto-calibrage de la pièce dans le noir
clear all;
close all;

fond1 = imread("ImagesTrepiedTest\Fond2.jpeg") ;

for i = 2:7
    img = imread(fullfile('ImagesTrepiedTest', sprintf('Trepied2_%d.jpeg', i)));

    sansFond = imabsdiff(img, fond1);
    sansFond = rgb2gray(sansFond);
    M = max(max(sansFond));
    sansFond = sansFond*(255/M);
    
    sansFond=imfilter(sansFond,fspecial("average",[5 5]));
    [Gmag,Gdir] = imgradient(sansFond);
    sansFond=Gmag;
    sansFond = imclearborder(sansFond);
    M = max(max(sansFond));
    sansFond = sansFond*(255/M);
    
    sansFond = sansFond>50;
    sansFond = imopen(sansFond, strel('square', 3));
    sansFond = imclose(sansFond, strel('disk', 50));
    [sansFond,Gdir] = imgradient(sansFond);
    
    [centers, radii] = imfindcircles(sansFond, [7 40], 'ObjectPolarity', 'bright', 'Sensitivity', 0.95);
    [radiimax, imax] = max(radii);
    radiimax

    figure;
    imshow(img);
    viscircles(centers(imax, :), radiimax, 'EdgeColor', 'b');
end

%% Auto-calibrage variant
clear all;
close all;

fond1 = imread("ImagesCalibrageTest\Fond.jpg") ;

for i = 1:3
    img = imread(fullfile('ImagesCalibrageTest', sprintf('Calibrage%d.jpg', i)));

    sansFond = imabsdiff(img, fond1);
    sansFond = rgb2gray(sansFond);
    M = max(max(sansFond));
    sansFond = sansFond*(255/M);

    figure;
    imshow(sansFond) ;
    
    sansFond=imfilter(sansFond,fspecial("average",[5 5]));
    [Gmag,Gdir] = imgradient(sansFond);
    sansFond=Gmag;
    sansFond = imclearborder(sansFond);
    M = max(max(sansFond));
    sansFond = sansFond*(255/M);
    
    sansFond = sansFond>50;
    sansFond = imopen(sansFond, strel('square', 3));
    sansFond = imclose(sansFond, strel('disk', 50));
    [sansFond,Gdir] = imgradient(sansFond);
    
    [centers, radii] = imfindcircles(sansFond, [7 40], 'ObjectPolarity', 'bright', 'Sensitivity', 0.95);
    [radiimax, imax] = max(radii);
    radiimax
    figure;
    imshow(img) ;
    viscircles(centers(imax, :), radiimax, 'EdgeColor', 'b');
end

%% y a encore un pb putain
clear all;
close all;

fond1 = imread("ImagesTrepiedTest\Fond.jpeg") ;

img = imread('ImagesCalibrageTest\Calibrage1.jpg');

figure;
imshow(img);

sansFond = imabsdiff(img, fond1);
sansFond = rgb2gray(sansFond);
M = max(max(sansFond));
sansFond = sansFond*(255/M);

sansFond=imfilter(sansFond,fspecial("average",[5 5]));
[Gmag,Gdir] = imgradient(sansFond);
sansFond=Gmag;
sansFond = imclearborder(sansFond);
M = max(max(sansFond));
sansFond = sansFond*(255/M);

figure;
imshow(sansFond,[]);

sansFond = sansFond>50;
sansFond = imopen(sansFond, strel('square', 3));
sansFond = imclose(sansFond, strel('square', 2));

[centers, radii] = imfindcircles(sansFond, [7 40], 'ObjectPolarity', 'bright', 'Sensitivity', 0.95);
[radiimax, imax] = max(radii);
radiimax
figure;
imshow(sansFond,[]);
viscircles(centers(imax, :), radiimax, 'EdgeColor', 'b');


